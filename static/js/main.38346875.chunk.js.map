{"version":3,"sources":["Playlist/TryFunction.jsx","Playlist/NumberBaseballFunction.jsx","Playlist/RSPClass.jsx","Playlist/Ball.jsx","Playlist/Lotto.jsx","Playlist/Gugudan.jsx","Playlist/Td.jsx","Playlist/Tr.jsx","Playlist/Table.jsx","Playlist/Form.jsx","Playlist/MineSearch.jsx","Playlist/WordRelayClass.jsx","GameMatcher.jsx","Games.jsx","App.js","serviceWorker.js","index.js"],"names":["TryFunction","memo","tryInfo","try","result","getNumbers","candidates","array","i","chosen","splice","Math","floor","random","push","NumberBaseballFunction","useState","answer","setAnswer","value","setValue","setResult","tries","setTries","inputEl","useRef","onSubmit","e","preventDefault","join","t","alert","current","focus","answerArray","split","map","v","parseInt","strike","ball","length","console","log","includes","indexOf","ref","maxLength","onChange","target","key","rspCoords","바위","가위","보","scores","computerChoice","imgCoord","Object","entries","find","RSP","state","score","changeHand","setState","onClickBtn","choice","clearInterval","interval","diff","prevState","setTimeout","setInterval","this","id","className","onClick","style","background","Component","Ball","number","getWinNumbers","candidate","Array","fill","shuffle","bonusNumber","winNumbers","slice","sort","p","c","Lotto","winBalls","bonus","redo","timeouts","runTimeouts","onClickRedo","prevProps","forEach","clearTimeout","React","require","Gugudan","ceil","first","setFirst","second","setSecond","type","getTdStyle","code","CODE","NORMAL","MINE","CLICKED_MINE","OPENED","QUESTION_MINE","QUESTION","FLAG_MINE","FLAG","Td","rowIndex","cellIndex","useContext","TableContext","tableData","dispatch","halted","onClickTd","useCallback","OPEN_CELL","row","cell","CLICK_MINE","onRightClickTd","FLAG_CELL","QUESTION_CELL","NORMALIZE_CELL","RealTd","data","onContextMenu","getTdText","Tr","td","Table","tr","Form","setRow","setCell","mine","setMine","onChangeRow","onChangeCell","onChangeMine","START_GAME","placeholder","createContext","initialState","timer","openedCount","plantMine","arr","rowData","j","k","ver","hor","reducer","action","checked","checkAround","around","concat","count","filter","near","n","MineSearch","useReducer","useMemo","useEffect","Provider","WordRelay","word","onSubmitForm","input","onChangeInput","onRefInput","GameMatcher","urlSearchParmas","URLSearchParams","props","location","search","get","match","params","name","Games","to","path","component","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.38346875.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\n\r\nconst TryFunction = memo(({ tryInfo }) => {\r\n    return (\r\n        <li>\r\n            <div>{tryInfo.try}</div>\r\n            <div>{tryInfo.result}</div>\r\n        </li>\r\n    )\r\n});\r\n\r\n\r\n\r\nexport default TryFunction;","import React, {useRef, useState, memo} from 'react';\r\n\r\nimport TryFunction from './TryFunction';\r\n\r\nconst getNumbers = () => {\r\n    const candidates = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n    const array = [];\r\n    for (let i = 0; i < 4; i += 1) {\r\n      const chosen = candidates.splice(Math.floor(Math.random() * (9 - i)), 1)[0];\r\n      array.push(chosen);\r\n    }\r\n    return array;\r\n  };\r\n  \r\n  const NumberBaseballFunction = () => {\r\n    const [answer, setAnswer] = useState(getNumbers());\r\n    const [value, setValue] = useState('');\r\n    const [result, setResult] = useState('');\r\n    const [tries, setTries] = useState([]);\r\n    const inputEl = useRef(null);\r\n  \r\n    const onSubmitForm = (e) => {\r\n      e.preventDefault();\r\n      if (value === answer.join('')) {\r\n        setTries((t) => ([\r\n          ...t,\r\n          {\r\n            try: value,\r\n            result: '홈런!',\r\n          }\r\n        ]));\r\n        setResult('홈런!');\r\n        alert('게임을 다시 실행합니다.');\r\n        setValue('');\r\n        setAnswer(getNumbers());\r\n        setTries([]);\r\n        inputEl.current.focus();\r\n      } else {\r\n        const answerArray = value.split('').map((v) => parseInt(v));\r\n        let strike = 0;\r\n        let ball = 0;\r\n        if (tries.length >= 9) {\r\n          setResult(`10번 넘게 틀려서 실패! 답은 ${answer.join(',')}였습니다!`); // state set은 비동기\r\n          alert('게임을 다시 시작합니다.');\r\n          setValue('');\r\n          setAnswer(getNumbers());\r\n          setTries([]);\r\n          inputEl.current.focus();\r\n        } else {\r\n          console.log('답은', answer.join(''));\r\n          for (let i = 0; i < 4; i += 1) {\r\n            if (answerArray[i] === answer[i]) {\r\n              console.log('strike', answerArray[i], answer[i]);\r\n              strike += 1;\r\n            } else if (answer.includes(answerArray[i])) {\r\n              console.log('ball', answerArray[i], answer.indexOf(answerArray[i]));\r\n              ball += 1;\r\n            }\r\n          }\r\n          setTries(t => ([\r\n            ...t,\r\n            {\r\n              try: value,\r\n              result: `${strike} 스트라이크, ${ball} 볼입니다.`,\r\n            }\r\n          ]));\r\n          setValue('');\r\n          inputEl.current.focus();\r\n        }\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <h1>{result}</h1>\r\n        <form onSubmit={onSubmitForm}>\r\n          <input\r\n            ref={inputEl}\r\n            maxLength={4}\r\n            value={value}\r\n            onChange={(e) => setValue(e.target.value)}\r\n          />\r\n          <button>입력!</button>\r\n        </form>\r\n        <div>시도: {tries.length}</div>\r\n        <ul>\r\n          {tries.map((v, i) => (\r\n            <TryFunction key={`${i + 1}차 시도 : ${v.try}`} tryInfo={v}/>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\n\r\nexport default NumberBaseballFunction;","import React, { Component } from 'react'\r\n\r\n\r\n// (밑에 주석친 내용은 리액트 라이프사이클순서이다.)\r\n// 클래스의 경우 -> constructor -> render -> ref -> componentDidMount\r\n// -> (setState/props 바뀔때) -> shouldComponentUpdate(true) -> render -> componentDidUpdate\r\n// 부모가 나를 없앴을 떄 -> componentWillUnmount -> 소멸\r\n\r\nconst rspCoords = {\r\n    바위: '0',\r\n    가위: '-142px',\r\n    보: '-284px',\r\n};\r\n\r\nconst scores = {\r\n    가위: 1,\r\n    바위: 0,\r\n    보: -1,\r\n};\r\n\r\nconst computerChoice = (imgCoord) => {\r\n    return Object.entries(rspCoords).find(function(v) {\r\n        return v[1] === imgCoord;\r\n    })[0];\r\n};\r\n\r\nclass RSP extends Component {\r\n    state = {\r\n        result: '',\r\n        imgCoord: rspCoords.바위,\r\n        score: 0,\r\n    };\r\n\r\n    interval;\r\n\r\n    componentDidMount() { // 컴포넌트가 첫 렌더링된 후, 여기에 비동기 요청을 많이 해요\r\n        \r\n        this.interval = setInterval( this.changeHand, 100);\r\n    }\r\n\r\n\r\n    componentWillUnmount() { // 컴포넌트가 제거되기 직전, 비동기 요청 정리를 많이 해요 (이코드에서는 componentWillUnmount를 넣으나 안넣으나 체감하기 힘듬)\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    changeHand = () => {\r\n        const {imgCoord} = this.state;\r\n        if (imgCoord === rspCoords.바위) {\r\n            this.setState({\r\n                imgCoord: rspCoords.가위,\r\n            });\r\n        } else if(imgCoord === rspCoords.가위) {\r\n            this.setState({\r\n                imgCoord: rspCoords.보,\r\n            });\r\n        } else if(imgCoord === rspCoords.보) {\r\n            this.setState({\r\n                imgCoord: rspCoords.바위,\r\n            });\r\n        }\r\n    };\r\n\r\n    onClickBtn = (choice) => {\r\n        const {imgCoord} = this.state;\r\n        clearInterval(this.interval);\r\n        const myScore = scores[choice];\r\n        const cpuScore = scores[computerChoice(imgCoord)];\r\n        const diff = myScore - cpuScore;\r\n        if (diff === 0) {\r\n            this.setState({\r\n                result: '비겼습니다!',\r\n            });\r\n        } else if ([-1, 2].includes(diff)) {\r\n            this.setState((prevState) => {\r\n                return {\r\n                    result: '이겼습니다.!',\r\n                    score: prevState.score + 1,\r\n                };\r\n            });\r\n        } else {\r\n            this.setState((prevState) => {\r\n                return {\r\n                    result: '졌습니다!',\r\n                    score: prevState.score - 1,\r\n                };\r\n            });\r\n        }\r\n        setTimeout(() => {\r\n            this.interval = setInterval(this.changeHand, 100);\r\n        },1000);\r\n    };\r\n\r\n    render() {\r\n        const { result, score, imgCoord } = this.state;\r\n        return (\r\n            <>\r\n                <div>\r\n                    <button id=\"rock\" className=\"btn\" onClick={() => this.onClickBtn('바위')}>바위</button>\r\n                    <button id=\"scissor\" className=\"btn\" onClick={() => this.onClickBtn('가위')}>가위</button>\r\n                    <button id=\"paper\" className=\"btn\" onClick={() => this.onClickBtn('보')}>보</button>\r\n                </div>\r\n                <div>{result}</div>\r\n                <div>현재 {score}점</div>\r\n                <div id=\"computer\" style={{ background: `url(https://en.pimg.jp/023/182/267/1/23182267.jpg) ${imgCoord} 0` }} />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RSP;","import React, { memo } from 'react'\r\n\r\nconst Ball = memo(({ number }) => {\r\n    let background;\r\n    if (number <= 10) {\r\n        background = 'red';\r\n    } else if (number <= 20) {\r\n        background = 'orange';\r\n    } else if (number <= 30) {\r\n        background = 'yellow';\r\n    } else if (number <= 40) {\r\n        background = 'blue';\r\n    } else {\r\n        background = 'green';\r\n    }\r\n    return (\r\n    <div className=\"ball\" style={{ background }}>{number}</div>\r\n    );\r\n});\r\n\r\nexport default Ball;","import React, { Component } from 'react';\r\nimport Ball from './Ball';\r\n\r\nfunction getWinNumbers() {\r\n    console.log('getWinNumbers');\r\n    const candidate = Array(45).fill().map((v, i) => i + 1);\r\n    const shuffle = [];\r\n    while (candidate.length > 0) {\r\n      shuffle.push(candidate.splice(Math.floor(Math.random() * candidate.length), 1)[0]);\r\n    }\r\n    const bonusNumber = shuffle[shuffle.length - 1];\r\n    const winNumbers = shuffle.slice(0, 6).sort((p, c) => p - c);\r\n    return [...winNumbers, bonusNumber];\r\n  }\r\n  \r\n  class Lotto extends Component {\r\n    state = {\r\n      winNumbers: getWinNumbers(), // 당첨 숫자들\r\n      winBalls: [],\r\n      bonus: null, // 보너스 공\r\n      redo: false,\r\n    };\r\n  \r\n    timeouts = [];\r\n  \r\n    runTimeouts = () => {\r\n      console.log('runTimeouts');\r\n      const { winNumbers } = this.state;\r\n      for (let i = 0; i < winNumbers.length - 1; i++) {\r\n        this.timeouts[i] = setTimeout(() => {\r\n          this.setState((prevState) => {\r\n            return {\r\n              winBalls: [...prevState.winBalls, winNumbers[i]],\r\n            };\r\n          });\r\n        }, (i + 1) * 1000);\r\n      }\r\n      this.timeouts[6] = setTimeout(() => {\r\n        this.setState({\r\n          bonus: winNumbers[6],\r\n          redo: true,\r\n        });\r\n      }, 7000);\r\n    };\r\n  \r\n    componentDidMount() {\r\n      console.log('didMount');\r\n      this.runTimeouts();\r\n      console.log('로또 숫자를 생성합니다.');\r\n    }\r\n  \r\n    componentDidUpdate(prevProps, prevState) {\r\n      console.log('didUpdate');\r\n      if (this.state.winBalls.length === 0) {\r\n        this.runTimeouts();\r\n      }\r\n      if (prevState.winNumbers !== this.state.winNumbers) {\r\n        console.log('로또 숫자를 생성합니다.');\r\n      }\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      this.timeouts.forEach((v) => {\r\n        clearTimeout(v);\r\n      });\r\n    }\r\n  \r\n    onClickRedo = () => {\r\n      console.log('onClickRedo');\r\n      this.setState({\r\n        winNumbers: getWinNumbers(), // 당첨 숫자들\r\n        winBalls: [],\r\n        bonus: null, // 보너스 공\r\n        redo: false,\r\n      });\r\n      this.timeouts = [];\r\n    };\r\n  \r\n    render() {\r\n      const { winBalls, bonus, redo } = this.state;\r\n      return (\r\n        <>\r\n          <div>당첨 숫자</div>\r\n          <div id=\"결과창\">\r\n            {winBalls.map((v) => <Ball key={v} number={v} />)}\r\n          </div>\r\n          <div>보너스!</div>\r\n          {bonus && <Ball number={bonus} />}\r\n          {redo && <button onClick={this.onClickRedo}>한 번 더!</button>}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default Lotto;","const React = require('react');\nconst { useState, useRef } = React;\n\nconst Gugudan = () => {\n  const [first, setFirst] = useState(Math.ceil(Math.random() * 9));\n  const [second, setSecond] = useState(Math.ceil(Math.random() * 9));\n  const [value, setValue] = useState('');\n  const [result, setResult] = useState('');\n  const inputEl = useRef(null);\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    if (parseInt(value) === first * second) {\n      setResult('정답');\n      setFirst(Math.ceil(Math.random() * 9));\n      setSecond(Math.ceil(Math.random() * 9));\n      setValue('');\n      inputEl.current.focus();\n    } else {\n      setResult('땡');\n      setValue('');\n      inputEl.current.focus();\n    }\n  };\n  return (\n    <>\n      <div>{first} 곱하기 {second}는?</div>\n      <form onSubmit={onSubmitForm}>\n        <input\n          ref={inputEl}\n          type=\"number\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <button>입력!</button>\n      </form>\n      <div id=\"result\">{result}</div>\n    </>\n  );\n};\n\nexport default Gugudan;\n","import React, { useContext, useCallback, memo, useMemo } from 'react';\nimport { CLICK_MINE, CODE, FLAG_CELL, NORMALIZE_CELL, OPEN_CELL, QUESTION_CELL, TableContext } from './MineSearch';\n\nconst getTdStyle = (code) => {\n  switch (code) {\n    case CODE.NORMAL:\n    case CODE.MINE:\n      return {\n        background: '#444',\n      };\n    case CODE.CLICKED_MINE:\n    case CODE.OPENED:\n      return {\n        background: 'white',\n      };\n    case CODE.QUESTION_MINE:\n    case CODE.QUESTION:\n      return {\n        background: 'yellow',\n      };\n    case CODE.FLAG_MINE:\n    case CODE.FLAG:\n      return {\n        background: 'red',\n      };\n    default:\n      return {\n        background: 'white',\n      };\n  }\n};\n\nconst getTdText = (code) => {\n  console.log('getTdtext');\n  switch (code) {\n    case CODE.NORMAL:\n      return '';\n    case CODE.MINE:\n      return 'X';\n    case CODE.CLICKED_MINE:\n      return '펑';\n    case CODE.FLAG_MINE:\n    case CODE.FLAG:\n      return '!';\n    case CODE.QUESTION_MINE:\n    case CODE.QUESTION:\n      return '?';\n    default:\n      return code || '';\n  }\n};\n\nconst Td = memo(({ rowIndex, cellIndex }) => {\n  const { tableData, dispatch, halted } = useContext(TableContext);\n\n  const onClickTd = useCallback(() => {\n    if (halted) {\n      return;\n    }\n    switch (tableData[rowIndex][cellIndex]) {\n      case CODE.OPENED:\n      case CODE.FLAG_MINE:\n      case CODE.FLAG:\n      case CODE.QUESTION_MINE:\n      case CODE.QUESTION:\n        return;\n      case CODE.NORMAL:\n        dispatch({ type: OPEN_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      case CODE.MINE:\n        dispatch({ type: CLICK_MINE, row: rowIndex, cell: cellIndex });\n        return;\n      default:\n        return;\n    }\n  }, [tableData[rowIndex][cellIndex], halted]);\n\n  const onRightClickTd = useCallback((e) => {\n    e.preventDefault();\n    if (halted) {\n      return;\n    }\n    switch (tableData[rowIndex][cellIndex]) {\n      case CODE.NORMAL:\n      case CODE.MINE:\n        dispatch({ type: FLAG_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      case CODE.FLAG_MINE:\n      case CODE.FLAG:\n        dispatch({ type: QUESTION_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      case CODE.QUESTION_MINE:\n      case CODE.QUESTION:\n        dispatch({ type: NORMALIZE_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      default:\n        return;\n    }\n  }, [tableData[rowIndex][cellIndex], halted]);\n\n  console.log('td rendered');\n\n  return <RealTd onClickTd={onClickTd} onRightClickTd={onRightClickTd} data={tableData[rowIndex][cellIndex]} />;\n});\n\nconst RealTd = memo(({ onClickTd, onRightClickTd, data}) => {\n  console.log('real td rendered');\n  return (\n    <td\n      style={getTdStyle(data)}\n      onClick={onClickTd}\n      onContextMenu={onRightClickTd}\n    >{getTdText(data)}</td>\n  )\n});\n\nexport default Td;\n","import React, { useContext, memo } from 'react';\nimport Td from './Td';\nimport { TableContext } from './MineSearch';\n\nconst Tr = memo(({ rowIndex }) => {\n  const { tableData } = useContext(TableContext);\n\n  return (\n    <tr>\n      {tableData[0] && Array(tableData[0].length).fill().map((td, i) =>\n        <Td rowIndex={rowIndex} cellIndex={i} />\n      )}\n    </tr>\n  )\n});\n\nexport default Tr;\n","import React, { useContext, memo } from 'react';\nimport Tr from './Tr';\nimport { TableContext } from './MineSearch';\n\nconst Table = memo(() => {\n  const { tableData } = useContext(TableContext);\n  return (\n    <table>\n      {Array(tableData.length).fill().map((tr, i) => <Tr rowIndex={i} />)}\n    </table>\n  )\n});\n\nexport default Table;\n","import React, { useState, useCallback, useContext, memo } from 'react';\nimport { START_GAME, TableContext } from './MineSearch';\n\nconst Form = memo(() => {\n  const [row, setRow] = useState(10);\n  const [cell, setCell] = useState(10);\n  const [mine, setMine] = useState(20);\n  const { dispatch } = useContext(TableContext);\n\n  const onChangeRow = useCallback((e) => {\n    setRow(e.target.value);\n  }, []);\n\n  const onChangeCell = useCallback((e) => {\n    setCell(e.target.value);\n  }, []);\n\n  const onChangeMine = useCallback((e) => {\n    setMine(e.target.value);\n  }, []);\n\n  const onClickBtn = useCallback(() => {\n    dispatch({ type: START_GAME, row, cell, mine });\n  }, [row, cell, mine]);\n\n  return (\n    <div>\n      <input type=\"number\" placeholder=\"세로\" value={row} onChange={onChangeRow} />\n      <input type=\"number\" placeholder=\"가로\" value={cell} onChange={onChangeCell} />\n      <input type=\"number\" placeholder=\"지뢰\" value={mine} onChange={onChangeMine} />\n      <button onClick={onClickBtn}>시작</button>\n    </div>\n  );\n});\n\nexport default Form;\n","import React, { useEffect, useReducer, createContext, useMemo } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nexport const CODE = {\n  MINE: -7,\n  NORMAL: -1,\n  QUESTION: -2,\n  FLAG: -3,\n  QUESTION_MINE: -4,\n  FLAG_MINE: -5,\n  CLICKED_MINE: -6,\n  OPENED: 0, // 0 이상이면 다 opened\n};\n\nexport const TableContext = createContext({\n  tableData: [],\n  halted: true,\n  dispatch: () => {},\n});\n\nconst initialState = {\n  tableData: [],\n  data: {\n    row: 0,\n    cell: 0,\n    mine: 0,\n  },\n  timer: 0,\n  result: '',\n  halted: true,\n  openedCount: 0,\n};\n\nconst plantMine = (row, cell, mine) => {\n  console.log(row, cell, mine);\n  const candidate = Array(row * cell).fill().map((arr, i) => {\n    return i;\n  });\n  const shuffle = [];\n  while (candidate.length > row * cell - mine) {\n    const chosen = candidate.splice(Math.floor(Math.random() * candidate.length), 1)[0];\n    shuffle.push(chosen);\n  }\n  const data = [];\n  for (let i = 0; i < row; i++) {\n    const rowData = [];\n    data.push(rowData);\n    for (let j = 0; j < cell; j++) {\n      rowData.push(CODE.NORMAL);\n    }\n  }\n\n  for (let k = 0; k < shuffle.length; k++) {\n    const ver = Math.floor(shuffle[k] / cell);\n    const hor = shuffle[k] % cell;\n    data[ver][hor] = CODE.MINE;\n  }\n\n  console.log(data);\n  return data;\n};\n\nexport const START_GAME = 'START_GAME';\nexport const OPEN_CELL = 'OPEN_CELL';\nexport const CLICK_MINE = 'CLICK_MINE';\nexport const FLAG_CELL = 'FLAG_CELL';\nexport const QUESTION_CELL = 'QUESTION_CELL';\nexport const NORMALIZE_CELL = 'NORMALIZE_CELL';\nexport const INCREMENT_TIMER = 'INCREMENT_TIMER';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_GAME:\n      return {\n        ...state,\n        data: {\n          row: action.row,\n          cell: action.cell,\n          mine: action.mine,\n        },\n        openedCount: 0,\n        tableData: plantMine(action.row, action.cell, action.mine),\n        halted: false,\n        timer: 0,\n      };\n    case OPEN_CELL: {\n      const tableData = [...state.tableData];\n      tableData.forEach((row, i) => {\n        tableData[i] = [...row];\n      });\n      const checked = [];\n      let openedCount = 0;\n      console.log(tableData.length, tableData[0].length);\n      const checkAround = (row, cell) => {\n        console.log(row, cell);\n        if (row < 0 || row >= tableData.length || cell < 0 || cell >= tableData[0].length) {\n          return;\n        } // 상하좌우 없는칸은 안 열기\n        if ([CODE.OPENED, CODE.FLAG, CODE.FLAG_MINE, CODE.QUESTION_MINE, CODE.QUESTION].includes(tableData[row][cell])) {\n          return;\n        } // 닫힌 칸만 열기\n        if (checked.includes(row + '/' + cell)) {\n          return;\n        } else {\n          checked.push(row + '/' + cell);\n        } // 한 번 연칸은 무시하기\n        let around = [\n          tableData[row][cell - 1], tableData[row][cell + 1],\n        ];\n        if (tableData[row - 1]) {\n          around = around.concat([tableData[row - 1][cell - 1], tableData[row - 1][cell], tableData[row - 1][cell + 1]]);\n        }\n        if (tableData[row + 1]) {\n          around = around.concat([tableData[row + 1][cell - 1], tableData[row + 1][cell], tableData[row + 1][cell + 1]]);\n        }\n        const count = around.filter(function (v) {\n          return [CODE.MINE, CODE.FLAG_MINE, CODE.QUESTION_MINE].includes(v);\n        }).length;\n        if (count === 0) { // 주변칸 오픈\n          if (row > -1) {\n            const near = [];\n            if (row - 1 > -1) {\n              near.push([row -1, cell - 1]);\n              near.push([row -1, cell]);\n              near.push([row -1, cell + 1]);\n            }\n            near.push([row, cell - 1]);\n            near.push([row, cell + 1]);\n            if (row + 1 < tableData.length) {\n              near.push([row + 1, cell - 1]);\n              near.push([row + 1, cell]);\n              near.push([row + 1, cell + 1]);\n            }\n            near.forEach((n) => {\n              if (tableData[n[0]][n[1]] !== CODE.OPENED) {\n                checkAround(n[0], n[1]);\n              }\n            })\n          }\n        }\n        if (tableData[row][cell] === CODE.NORMAL) { // 내 칸이 닫힌 칸이면 카운트 증가\n          openedCount += 1;\n        }\n        tableData[row][cell] = count;\n      };\n      checkAround(action.row, action.cell);\n      let halted = false;\n      let result = '';\n      console.log(state.data.row * state.data.cell - state.data.mine, state.openedCount, openedCount);\n      if (state.data.row * state.data.cell - state.data.mine === state.openedCount + openedCount) { // 승리\n        halted = true;\n        result = `${state.timer}초만에 승리하셨습니다`;\n      }\n      return {\n        ...state,\n        tableData,\n        openedCount: state.openedCount + openedCount,\n        halted,\n        result,\n      };\n    }\n    case CLICK_MINE: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      tableData[action.row][action.cell] = CODE.CLICKED_MINE;\n      return {\n        ...state,\n        tableData,\n        halted: true,\n      };\n    }\n    case FLAG_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.MINE) {\n        tableData[action.row][action.cell] = CODE.FLAG_MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.FLAG;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case QUESTION_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.FLAG_MINE) {\n        tableData[action.row][action.cell] = CODE.QUESTION_MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.QUESTION;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case NORMALIZE_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.QUESTION_MINE) {\n        tableData[action.row][action.cell] = CODE.MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.NORMAL;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case INCREMENT_TIMER: {\n      return {\n        ...state,\n        timer: state.timer + 1,\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst MineSearch = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { tableData, halted, timer, result } = state;\n\n  const value = useMemo(() => ({ tableData, halted, dispatch }), [tableData, halted]);\n\n  useEffect(() => {\n    let timer;\n    if (halted === false) {\n      timer = setInterval(() => {\n        dispatch({ type: INCREMENT_TIMER });\n      }, 1000);\n    }\n    return () => {\n      clearInterval(timer);\n    }\n  }, [halted]);\n\n  return (\n    <TableContext.Provider value={value}>\n      <Form />\n      <div>{timer}</div>\n      <Table />\n      <div>{result}</div>\n    </TableContext.Provider>\n  );\n};\n\nexport default MineSearch;\n","const React = require('react');\r\nconst { Component } = React;\r\n\r\n\r\nclass WordRelay extends React.Component {\r\n    state = {\r\n        word: '개발자',\r\n        value: '',\r\n        result: '',\r\n    };\r\n\r\n    onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.word[this.state.word.length - 1] === this.state.value[0]) {\r\n            this.setState({\r\n                result: '딩동댕',\r\n                word: this.state.value,\r\n                value:'',\r\n            });\r\n            this.input.focus();\r\n        } else {\r\n            this.setState({\r\n                result: '떙',\r\n                value:'',\r\n            });\r\n            this.input.focus();   \r\n        }\r\n    };\r\n\r\n    onChangeInput = (e) => {\r\n        this.setState({ value:e.target.value });\r\n    };\r\n\r\n    input;\r\n\r\n    onRefInput = (c) => {\r\n        this.input = c;\r\n    };\r\n\r\n    \r\n    render() {\r\n        return (\r\n        <>\r\n            <div>{this.state.word}</div>\r\n            <form onSubmit={this.onSubmitForm}>\r\n                <input ref={this.onRefInput} value={this.state.value} onChange={this.onChangeInput} />\r\n                <button>입력!</button>\r\n            </form>\r\n        <div>{this.state.result}</div>\r\n        </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WordRelay;","import React, { Component } from 'react'\r\nimport NumberBaseball from './Playlist/NumberBaseballFunction';\r\nimport RSP from './Playlist/RSPClass';\r\nimport Lotto from './Playlist/Lotto';\r\nimport * as Gugudan from './Playlist/Gugudan';\r\nimport Minesweeper from './Playlist/MineSearch';\r\nimport * as WordRelayClass from './Playlist/WordRelayClass';\r\n\r\nexport default class GameMatcher extends Component {\r\n    render() {\r\n        let urlSearchParmas = new URLSearchParams(this.props.location.search.slice(1));//라우트에서 받아오는 것이다. this.props안에 history객체가 있는데 this.props안에 있는 history객체는 내부적으로 브라우저에 있는 history객체를 사용하고 있다.\r\n        console.log(urlSearchParmas.get('hello'));\r\n        if (this.props.match.params.name === 'number-baseball') {\r\n            return <NumberBaseball />\r\n        } else if (this.props.match.params.name === 'rock-scissors-paper') {\r\n            return <RSP />\r\n        } else if (this.props.match.params.name === 'lotto-generator') {\r\n            return <Lotto />\r\n        } else if (this.props.match.params.name === 'gugudan') {\r\n            return <Gugudan />\r\n        } else if (this.props.match.params.name === 'ending') {\r\n            return <WordRelayClass />\r\n        } else if (this.props.match.params.name === 'minesweeper') {\r\n            return <Minesweeper />\r\n        } \r\n        return (\r\n            <div>\r\n                일치하는 게임이 없습니다.\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport { HashRouter, Route, Link } from 'react-router-dom';\n\nimport GameMatcher from './GameMatcher';\n\nconst Games = () => {\n  return (\n      <HashRouter>\n        <div>\n          <Link to=\"/game/number-baseball\">숫자야구</Link>\n          &nbsp;\n          <Link to=\"/game/rock-scissors-paper\">가위바위보</Link>\n          &nbsp;\n          <Link to=\"/game/lotto-generator\">로또생성기</Link>\n          &nbsp;\n          <Link to=\"/game/gugudan\">구구단</Link>\n          &nbsp;\n          <Link to=\"/game/ending\">끝말잇기</Link>\n          &nbsp;\n          <Link to=\"/game/minesweeper\">지뢰찾기</Link>\n          &nbsp;\n          <Link to=\"/game/index\">게임 매쳐</Link>{/* /game/index두개단어이기만 하면 된다. /game/뒤에는 아무 단어나 넣으면 된다. */}\n        </div>\n        <div>\n          <Route path=\"/game/:name\" component={GameMatcher} /> {/* 라우트들이 너무 늘어나면 문제가 되기 때문에 효율적으로 라우트 갯수를 관리할 수 있는 동적 라우트 매칭 */}\n          {/* 주소를 /game/:name 이런식으로 적는데 실제의 주소가 /game/:name 이건 아니고 /game/뒤에 :name이 있는데 얘네들을 파라미터라고 부른다. 줄여서 params라고 부른다. 이부분이 동적으로 바뀐다. :name이 될 수도 있고 :rock-scissors-paper가 될수 도 있고 :lotto-generator가 될수 도 있는 것이다.  */}\n        </div>\n      </HashRouter>\n  );\n};\n\nexport default Games;\n","import React, { Component } from 'react';\nimport Games from './Games';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Games />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}