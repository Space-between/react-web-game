{"version":3,"sources":["Playlist/TryFunction.jsx","Playlist/NumberBaseballFunction.jsx","Playlist/RSPFunction.jsx","Playlist/Ball.jsx","Playlist/LottoFunction.jsx","Playlist/GuGuDan.jsx","Playlist/Td.jsx","Playlist/Tr.jsx","Playlist/Table.jsx","Playlist/Form.jsx","Playlist/MineSearch.jsx","Playlist/WordRelayFunction.jsx","Playlist/ResponseCheckFunction.jsx","GameMatcher.jsx","Games.jsx","App.js","serviceWorker.js","index.js"],"names":["TryFunction","memo","tryInfo","try","result","getNumbers","candidates","array","i","chosen","splice","Math","floor","random","push","NumberBaseballFunction","useState","answer","setAnswer","value","setValue","setResult","tries","setTries","inputEl","useRef","onSubmit","e","preventDefault","join","t","alert","current","focus","answerArray","split","map","v","parseInt","strike","ball","length","console","log","includes","indexOf","ref","maxLength","onChange","target","key","rspCoords","바위","가위","보","scores","RSP","imgCoord","setImgCoord","score","setScore","interval","useEffect","setInterval","changeHand","clearInterval","onClickBtn","choice","diff","Object","entries","find","computerChoice","prevScore","setTimeout","id","style","background","className","onClick","Ball","number","getWinNumbers","candidate","Array","fill","shuffle","bonusNumber","winNumbers","slice","sort","p","c","Lotto","lottoNumbers","useMemo","setWinNumbers","winBalls","setWinBalls","bonus","setBonus","redo","setRedo","timeouts","prevBalls","forEach","clearTimeout","onClickRedo","useCallback","GuGuDan","ceil","first","setFirst","second","setSecond","type","getTdStyle","code","CODE","NORMAL","MINE","CLICKED_MINE","OPENED","QUESTION_MINE","QUESTION","FLAG_MINE","FLAG","Td","rowIndex","cellIndex","useContext","TableContext","tableData","dispatch","halted","onClickTd","OPEN_CELL","row","cell","CLICK_MINE","onRightClickTd","FLAG_CELL","QUESTION_CELL","NORMALIZE_CELL","RealTd","data","onContextMenu","getTdText","Tr","td","Table","tr","Form","setRow","setCell","mine","setMine","onChangeRow","onChangeCell","onChangeMine","START_GAME","placeholder","createContext","initialState","timer","openedCount","plantMine","arr","rowData","j","k","ver","hor","reducer","state","action","checked","checkAround","around","concat","count","filter","near","n","MineSearch","useReducer","Provider","React","require","WordRelay","word","setWord","currentTarget","ResponseCheckFunction","setState","message","setMessage","timeout","startTime","endTime","onReset","Date","prevResult","reduce","a","GameMatcher","urlSearchParmas","URLSearchParams","this","props","location","search","get","match","params","name","Component","Games","to","path","component","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.4dade2ce.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\nconst TryFunction = memo(({ tryInfo }) => {\n    return (\n        <li>\n            <div>{tryInfo.try}</div>\n            <div>{tryInfo.result}</div>\n        </li>\n    )\n});\n\n\n\nexport default TryFunction;","import React, {useRef, useState, memo} from 'react';\n\nimport TryFunction from './TryFunction';\n\nconst getNumbers = () => {\n    const candidates = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const array = [];\n    for (let i = 0; i < 4; i += 1) {\n      const chosen = candidates.splice(Math.floor(Math.random() * (9 - i)), 1)[0];\n      array.push(chosen);\n    }\n    return array;\n  };\n  \n  const NumberBaseballFunction = () => {\n    const [answer, setAnswer] = useState(getNumbers());\n    const [value, setValue] = useState('');\n    const [result, setResult] = useState('');\n    const [tries, setTries] = useState([]);\n    const inputEl = useRef(null);\n  \n    const onSubmitForm = (e) => {\n      e.preventDefault();\n      if (value === answer.join('')) {\n        setTries((t) => ([\n          ...t,\n          {\n            try: value,\n            result: '홈런!',\n          }\n        ]));\n        setResult('홈런!');\n        alert('게임을 다시 실행합니다.');\n        setValue('');\n        setAnswer(getNumbers());\n        setTries([]);\n        inputEl.current.focus();\n      } else {\n        const answerArray = value.split('').map((v) => parseInt(v));\n        let strike = 0;\n        let ball = 0;\n        if (tries.length >= 9) {\n          setResult(`10번 넘게 틀려서 실패! 답은 ${answer.join(',')}였습니다!`); // state set은 비동기\n          alert('게임을 다시 시작합니다.');\n          setValue('');\n          setAnswer(getNumbers());\n          setTries([]);\n          inputEl.current.focus();\n        } else {\n          console.log('답은', answer.join(''));\n          for (let i = 0; i < 4; i += 1) {\n            if (answerArray[i] === answer[i]) {\n              console.log('strike', answerArray[i], answer[i]);\n              strike += 1;\n            } else if (answer.includes(answerArray[i])) {\n              console.log('ball', answerArray[i], answer.indexOf(answerArray[i]));\n              ball += 1;\n            }\n          }\n          setTries(t => ([\n            ...t,\n            {\n              try: value,\n              result: `${strike} 스트라이크, ${ball} 볼입니다.`,\n            }\n          ]));\n          setValue('');\n          inputEl.current.focus();\n        }\n      }\n    };\n  \n    return (\n      <>\n        <h1>{result}</h1>\n        <form onSubmit={onSubmitForm}>\n          <input\n            ref={inputEl}\n            maxLength={4}\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <button>입력!</button>\n        </form>\n        <div>시도: {tries.length}</div>\n        <ul>\n          {tries.map((v, i) => (\n            <TryFunction key={`${i + 1}차 시도 : ${v.try}`} tryInfo={v}/>\n          ))}\n        </ul>\n      </>\n    );\n  };\n\n\n\nexport default NumberBaseballFunction;","import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst rspCoords = {\r\n  바위: '0',\r\n  가위: '-142px',\r\n  보: '-284px',\r\n};\r\n\r\nconst scores = {\r\n  가위: 1,\r\n  바위: 0,\r\n  보: -1,\r\n};\r\n\r\nconst computerChoice = (imgCoord) => {\r\n  return Object.entries(rspCoords).find(function(v) {\r\n    return v[1] === imgCoord;\r\n  })[0];\r\n};\r\n\r\n//                        result, imgCoord, score\r\n// componentDidMount\r\n// componentDidUpdate\r\n// componentWillUnmount\r\n\r\n// componentDidMount() {\r\n//   this.setState({\r\n//     imgCoord: 3,\r\n//     score: 1,\r\n//     result: 2,\r\n//   })\r\n// }\r\n\r\n// useEffect(() => {\r\n//   setImgCoord();\r\n//   setScore();\r\n// }, [imgCoord, score]);\r\n// useEffect(() => {\r\n//   setResult();\r\n// }, [result]);\r\n\r\n\r\nconst RSP = () => {\r\n  const [result, setResult] = useState('');\r\n  const [imgCoord, setImgCoord] = useState(rspCoords.바위);\r\n  const [score, setScore] = useState(0);\r\n  const interval = useRef();\r\n\r\n  useEffect(() => { // componentDidMount, componentDidUpdate 역할(1대1 대응은 아님)\r\n    console.log('다시 실행');\r\n    interval.current = setInterval(changeHand, 100);\r\n    return () => { // componentWillUnmount 역할\r\n      console.log('종료');\r\n      clearInterval(interval.current);\r\n    }\r\n  }, [imgCoord]);\r\n\r\n  const changeHand = () => {\r\n    if (imgCoord === rspCoords.바위) {\r\n      setImgCoord(rspCoords.가위);\r\n    } else if (imgCoord === rspCoords.가위) {\r\n      setImgCoord(rspCoords.보);\r\n    } else if (imgCoord === rspCoords.보) {\r\n      setImgCoord(rspCoords.바위);\r\n    }\r\n  };\r\n\r\n  const onClickBtn = (choice) => () => {\r\n    clearInterval(interval.current);\r\n    const myScore = scores[choice];\r\n    const cpuScore = scores[computerChoice(imgCoord)];\r\n    const diff = myScore - cpuScore;\r\n    if (diff === 0) {\r\n      setResult('비겼습니다!');\r\n    } else if ([-1, 2].includes(diff)) {\r\n      setResult('이겼습니다!');\r\n      setScore((prevScore) => prevScore + 1);\r\n    } else {\r\n      setResult('졌습니다!');\r\n      setScore((prevScore) => prevScore - 1);\r\n    }\r\n    setTimeout(() => {\r\n      interval.current = setInterval(changeHand, 100);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"computer\" style={{ background: `url(https://en.pimg.jp/023/182/267/1/23182267.jpg) ${imgCoord} 0` }} />\r\n      <div>\r\n        <button id=\"rock\" className=\"btn\" onClick={onClickBtn('바위')}>바위</button>\r\n        <button id=\"scissor\" className=\"btn\" onClick={onClickBtn('가위')}>가위</button>\r\n        <button id=\"paper\" className=\"btn\" onClick={onClickBtn('보')}>보</button>\r\n      </div>\r\n      <div>{result}</div>\r\n      <div>현재 {score}점</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RSP;\r\n","import React, { memo } from 'react'\n\nconst Ball = memo(({ number }) => {\n    let background;\n    if (number <= 10) {\n        background = 'red';\n    } else if (number <= 20) {\n        background = 'orange';\n    } else if (number <= 30) {\n        background = 'yellow';\n    } else if (number <= 40) {\n        background = 'blue';\n    } else {\n        background = 'green';\n    }\n    return (\n    <div className=\"ball\" style={{ background }}>{number}</div>\n    );\n});\n\nexport default Ball;","import React, { useState, useRef, useEffect, useMemo, useCallback } from 'react';\r\nimport Ball from './Ball';\r\n\r\nfunction getWinNumbers() {\r\n  console.log('getWinNumbers');\r\n  const candidate = Array(45).fill().map((v, i) => i + 1);\r\n  const shuffle = [];\r\n  while (candidate.length > 0) {\r\n    shuffle.push(candidate.splice(Math.floor(Math.random() * candidate.length), 1)[0]);\r\n  }\r\n  const bonusNumber = shuffle[shuffle.length - 1];\r\n  const winNumbers = shuffle.slice(0, 6).sort((p, c) => p - c);\r\n  return [...winNumbers, bonusNumber];\r\n}\r\n\r\nconst Lotto = () => {\r\n  const lottoNumbers = useMemo(() => getWinNumbers(), []);\r\n  const [winNumbers, setWinNumbers] = useState(lottoNumbers);\r\n  const [winBalls, setWinBalls] = useState([]);\r\n  const [bonus, setBonus] = useState(null);\r\n  const [redo, setRedo] = useState(false);\r\n  const timeouts = useRef([]);\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect');\r\n    for (let i = 0; i < winNumbers.length - 1; i++) {\r\n      timeouts.current[i] = setTimeout(() => {\r\n        setWinBalls((prevBalls) => [...prevBalls, winNumbers[i]]);\r\n      }, (i + 1) * 1000);\r\n    }\r\n    timeouts.current[6] = setTimeout(() => {\r\n      setBonus(winNumbers[6]);\r\n      setRedo(true);\r\n    }, 7000);\r\n    return () => {\r\n      timeouts.current.forEach((v) => {\r\n        clearTimeout(v);\r\n      });\r\n    };\r\n  }, [timeouts.current]); // 빈 배열이면 componentDidMount와 동일\r\n  // 배열에 요소가 있으면 componentDidMount랑 componentDidUpdate 둘 다 수행\r\n\r\n  useEffect(() => {\r\n    console.log('로또 숫자를 생성합니다.');\r\n  }, [winNumbers]);\r\n\r\n  const onClickRedo = useCallback(() => {\r\n    console.log('onClickRedo');\r\n    console.log(winNumbers);\r\n    setWinNumbers(getWinNumbers());\r\n    setWinBalls([]);\r\n    setBonus(null);\r\n    setRedo(false);\r\n    timeouts.current = [];\r\n  }, [winNumbers]);\r\n\r\n  return (\r\n    <>\r\n      <div>당첨 숫자</div>\r\n      <div id=\"결과창\">\r\n        {winBalls.map((v) => <Ball key={v} number={v} />)}\r\n      </div>\r\n      <div>보너스!</div>\r\n      {bonus && <Ball number={bonus} onClick={onClickRedo} />}\r\n      {redo && <button onClick={onClickRedo}>한 번 더!</button>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lotto;\r\n","import React, { useState, useRef } from 'react';\n\nconst GuGuDan = () => {\n  const [first, setFirst] = useState(Math.ceil(Math.random() * 9));\n  const [second, setSecond] = useState(Math.ceil(Math.random() * 9));\n  const [value, setValue] = useState('');\n  const [result, setResult] = useState('');\n  const inputEl = useRef(null);\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    if (parseInt(value) === first * second) {\n      setResult('정답');\n      setFirst(Math.ceil(Math.random() * 9));\n      setSecond(Math.ceil(Math.random() * 9));\n      setValue('');\n      inputEl.current.focus();\n    } else {\n      setResult('땡');\n      setValue('');\n      inputEl.current.focus();\n    }\n  };\n  return (\n    <>\n      <div>{first} 곱하기 {second}는?</div>\n      <form onSubmit={onSubmitForm}>\n        <input\n          ref={inputEl}\n          type=\"number\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <button>입력!</button>\n      </form>\n      <div id=\"result\">{result}</div>\n    </>\n  );\n};\n\nexport default GuGuDan;\n","import React, { useContext, useCallback, memo, useMemo } from 'react';\nimport { CLICK_MINE, CODE, FLAG_CELL, NORMALIZE_CELL, OPEN_CELL, QUESTION_CELL, TableContext } from './MineSearch';\n\nconst getTdStyle = (code) => {\n  switch (code) {\n    case CODE.NORMAL:\n    case CODE.MINE:\n      return {\n        background: '#444',\n      };\n    case CODE.CLICKED_MINE:\n    case CODE.OPENED:\n      return {\n        background: 'white',\n      };\n    case CODE.QUESTION_MINE:\n    case CODE.QUESTION:\n      return {\n        background: 'yellow',\n      };\n    case CODE.FLAG_MINE:\n    case CODE.FLAG:\n      return {\n        background: 'red',\n      };\n    default:\n      return {\n        background: 'white',\n      };\n  }\n};\n\nconst getTdText = (code) => {\n  console.log('getTdtext');\n  switch (code) {\n    case CODE.NORMAL:\n      return '';\n    case CODE.MINE:\n      return 'X';\n    case CODE.CLICKED_MINE:\n      return '펑';\n    case CODE.FLAG_MINE:\n    case CODE.FLAG:\n      return '!';\n    case CODE.QUESTION_MINE:\n    case CODE.QUESTION:\n      return '?';\n    default:\n      return code || '';\n  }\n};\n\nconst Td = memo(({ rowIndex, cellIndex }) => {\n  const { tableData, dispatch, halted } = useContext(TableContext);\n\n  const onClickTd = useCallback(() => {\n    if (halted) {\n      return;\n    }\n    switch (tableData[rowIndex][cellIndex]) {\n      case CODE.OPENED:\n      case CODE.FLAG_MINE:\n      case CODE.FLAG:\n      case CODE.QUESTION_MINE:\n      case CODE.QUESTION:\n        return;\n      case CODE.NORMAL:\n        dispatch({ type: OPEN_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      case CODE.MINE:\n        dispatch({ type: CLICK_MINE, row: rowIndex, cell: cellIndex });\n        return;\n      default:\n        return;\n    }\n  }, [tableData[rowIndex][cellIndex], halted]);\n\n  const onRightClickTd = useCallback((e) => {\n    e.preventDefault();\n    if (halted) {\n      return;\n    }\n    switch (tableData[rowIndex][cellIndex]) {\n      case CODE.NORMAL:\n      case CODE.MINE:\n        dispatch({ type: FLAG_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      case CODE.FLAG_MINE:\n      case CODE.FLAG:\n        dispatch({ type: QUESTION_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      case CODE.QUESTION_MINE:\n      case CODE.QUESTION:\n        dispatch({ type: NORMALIZE_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      default:\n        return;\n    }\n  }, [tableData[rowIndex][cellIndex], halted]);\n\n  console.log('td rendered');\n\n  return <RealTd onClickTd={onClickTd} onRightClickTd={onRightClickTd} data={tableData[rowIndex][cellIndex]} />;\n});\n\nconst RealTd = memo(({ onClickTd, onRightClickTd, data}) => {\n  console.log('real td rendered');\n  return (\n    <td\n      style={getTdStyle(data)}\n      onClick={onClickTd}\n      onContextMenu={onRightClickTd}\n    >{getTdText(data)}</td>\n  )\n});\n\nexport default Td;\n","import React, { useContext, memo } from 'react';\nimport Td from './Td';\nimport { TableContext } from './MineSearch';\n\nconst Tr = memo(({ rowIndex }) => {\n  const { tableData } = useContext(TableContext);\n\n  return (\n    <tr>\n      {tableData[0] && Array(tableData[0].length).fill().map((td, i) =>\n        <Td rowIndex={rowIndex} cellIndex={i} />\n      )}\n    </tr>\n  )\n});\n\nexport default Tr;\n","import React, { useContext, memo } from 'react';\nimport Tr from './Tr';\nimport { TableContext } from './MineSearch';\n\nconst Table = memo(() => {\n  const { tableData } = useContext(TableContext);\n  return (\n    <table>\n      {Array(tableData.length).fill().map((tr, i) => <Tr rowIndex={i} />)}\n    </table>\n  )\n});\n\nexport default Table;\n","import React, { useState, useCallback, useContext, memo } from 'react';\nimport { START_GAME, TableContext } from './MineSearch';\n\nconst Form = memo(() => {\n  const [row, setRow] = useState(10);\n  const [cell, setCell] = useState(10);\n  const [mine, setMine] = useState(20);\n  const { dispatch } = useContext(TableContext);\n\n  const onChangeRow = useCallback((e) => {\n    setRow(e.target.value);\n  }, []);\n\n  const onChangeCell = useCallback((e) => {\n    setCell(e.target.value);\n  }, []);\n\n  const onChangeMine = useCallback((e) => {\n    setMine(e.target.value);\n  }, []);\n\n  const onClickBtn = useCallback(() => {\n    dispatch({ type: START_GAME, row, cell, mine });\n  }, [row, cell, mine]);\n\n  return (\n    <div>\n      <input type=\"number\" placeholder=\"세로\" value={row} onChange={onChangeRow} />\n      <input type=\"number\" placeholder=\"가로\" value={cell} onChange={onChangeCell} />\n      <input type=\"number\" placeholder=\"지뢰\" value={mine} onChange={onChangeMine} />\n      <button onClick={onClickBtn}>시작</button>\n    </div>\n  );\n});\n\nexport default Form;\n","import React, { useEffect, useReducer, createContext, useMemo } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nexport const CODE = {\n  MINE: -7,\n  NORMAL: -1,\n  QUESTION: -2,\n  FLAG: -3,\n  QUESTION_MINE: -4,\n  FLAG_MINE: -5,\n  CLICKED_MINE: -6,\n  OPENED: 0, // 0 이상이면 다 opened\n};\n\nexport const TableContext = createContext({\n  tableData: [],\n  halted: true,\n  dispatch: () => {},\n});\n\nconst initialState = {\n  tableData: [],\n  data: {\n    row: 0,\n    cell: 0,\n    mine: 0,\n  },\n  timer: 0,\n  result: '',\n  halted: true,\n  openedCount: 0,\n};\n\nconst plantMine = (row, cell, mine) => {\n  console.log(row, cell, mine);\n  const candidate = Array(row * cell).fill().map((arr, i) => {\n    return i;\n  });\n  const shuffle = [];\n  while (candidate.length > row * cell - mine) {\n    const chosen = candidate.splice(Math.floor(Math.random() * candidate.length), 1)[0];\n    shuffle.push(chosen);\n  }\n  const data = [];\n  for (let i = 0; i < row; i++) {\n    const rowData = [];\n    data.push(rowData);\n    for (let j = 0; j < cell; j++) {\n      rowData.push(CODE.NORMAL);\n    }\n  }\n\n  for (let k = 0; k < shuffle.length; k++) {\n    const ver = Math.floor(shuffle[k] / cell);\n    const hor = shuffle[k] % cell;\n    data[ver][hor] = CODE.MINE;\n  }\n\n  console.log(data);\n  return data;\n};\n\nexport const START_GAME = 'START_GAME';\nexport const OPEN_CELL = 'OPEN_CELL';\nexport const CLICK_MINE = 'CLICK_MINE';\nexport const FLAG_CELL = 'FLAG_CELL';\nexport const QUESTION_CELL = 'QUESTION_CELL';\nexport const NORMALIZE_CELL = 'NORMALIZE_CELL';\nexport const INCREMENT_TIMER = 'INCREMENT_TIMER';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_GAME:\n      return {\n        ...state,\n        data: {\n          row: action.row,\n          cell: action.cell,\n          mine: action.mine,\n        },\n        openedCount: 0,\n        tableData: plantMine(action.row, action.cell, action.mine),\n        halted: false,\n        timer: 0,\n      };\n    case OPEN_CELL: {\n      const tableData = [...state.tableData];\n      tableData.forEach((row, i) => {\n        tableData[i] = [...row];\n      });\n      const checked = [];\n      let openedCount = 0;\n      console.log(tableData.length, tableData[0].length);\n      const checkAround = (row, cell) => {\n        console.log(row, cell);\n        if (row < 0 || row >= tableData.length || cell < 0 || cell >= tableData[0].length) {\n          return;\n        } // 상하좌우 없는칸은 안 열기\n        if ([CODE.OPENED, CODE.FLAG, CODE.FLAG_MINE, CODE.QUESTION_MINE, CODE.QUESTION].includes(tableData[row][cell])) {\n          return;\n        } // 닫힌 칸만 열기\n        if (checked.includes(row + '/' + cell)) {\n          return;\n        } else {\n          checked.push(row + '/' + cell);\n        } // 한 번 연칸은 무시하기\n        let around = [\n          tableData[row][cell - 1], tableData[row][cell + 1],\n        ];\n        if (tableData[row - 1]) {\n          around = around.concat([tableData[row - 1][cell - 1], tableData[row - 1][cell], tableData[row - 1][cell + 1]]);\n        }\n        if (tableData[row + 1]) {\n          around = around.concat([tableData[row + 1][cell - 1], tableData[row + 1][cell], tableData[row + 1][cell + 1]]);\n        }\n        const count = around.filter(function (v) {\n          return [CODE.MINE, CODE.FLAG_MINE, CODE.QUESTION_MINE].includes(v);\n        }).length;\n        if (count === 0) { // 주변칸 오픈\n          if (row > -1) {\n            const near = [];\n            if (row - 1 > -1) {\n              near.push([row -1, cell - 1]);\n              near.push([row -1, cell]);\n              near.push([row -1, cell + 1]);\n            }\n            near.push([row, cell - 1]);\n            near.push([row, cell + 1]);\n            if (row + 1 < tableData.length) {\n              near.push([row + 1, cell - 1]);\n              near.push([row + 1, cell]);\n              near.push([row + 1, cell + 1]);\n            }\n            near.forEach((n) => {\n              if (tableData[n[0]][n[1]] !== CODE.OPENED) {\n                checkAround(n[0], n[1]);\n              }\n            })\n          }\n        }\n        if (tableData[row][cell] === CODE.NORMAL) { // 내 칸이 닫힌 칸이면 카운트 증가\n          openedCount += 1;\n        }\n        tableData[row][cell] = count;\n      };\n      checkAround(action.row, action.cell);\n      let halted = false;\n      let result = '';\n      console.log(state.data.row * state.data.cell - state.data.mine, state.openedCount, openedCount);\n      if (state.data.row * state.data.cell - state.data.mine === state.openedCount + openedCount) { // 승리\n        halted = true;\n        result = `${state.timer}초만에 승리하셨습니다`;\n      }\n      return {\n        ...state,\n        tableData,\n        openedCount: state.openedCount + openedCount,\n        halted,\n        result,\n      };\n    }\n    case CLICK_MINE: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      tableData[action.row][action.cell] = CODE.CLICKED_MINE;\n      return {\n        ...state,\n        tableData,\n        halted: true,\n      };\n    }\n    case FLAG_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.MINE) {\n        tableData[action.row][action.cell] = CODE.FLAG_MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.FLAG;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case QUESTION_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.FLAG_MINE) {\n        tableData[action.row][action.cell] = CODE.QUESTION_MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.QUESTION;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case NORMALIZE_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.QUESTION_MINE) {\n        tableData[action.row][action.cell] = CODE.MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.NORMAL;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case INCREMENT_TIMER: {\n      return {\n        ...state,\n        timer: state.timer + 1,\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst MineSearch = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { tableData, halted, timer, result } = state;\n\n  const value = useMemo(() => ({ tableData, halted, dispatch }), [tableData, halted]);\n\n  useEffect(() => {\n    let timer;\n    if (halted === false) {\n      timer = setInterval(() => {\n        dispatch({ type: INCREMENT_TIMER });\n      }, 1000);\n    }\n    return () => {\n      clearInterval(timer);\n    }\n  }, [halted]);\n\n  return (\n    <TableContext.Provider value={value}>\n      <Form />\n      <div>{timer}</div>\n      <Table />\n      <div>{result}</div>\n    </TableContext.Provider>\n  );\n};\n\nexport default MineSearch;\n","const React = require('react');\r\nconst { useState } = require('react');\r\n\r\nconst WordRelay = () => {\r\n  const [word, setWord] = useState('개발자');\r\n  const [value, setValue] = useState('');\r\n  const [result, setResult] = useState('');\r\n  const inputEl = React.useRef(null);\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    if (word[word.length - 1] === value[0]) {\r\n      setResult('딩동댕');\r\n      setWord(value);\r\n      setValue('');\r\n      inputEl.current.focus();\r\n    } else {\r\n      setResult('땡');\r\n      setValue('');\r\n      inputEl.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>{word}</div>\r\n      <form onSubmit={onSubmitForm}>\r\n        <input\r\n          ref={inputEl}\r\n          value={value}\r\n          onChange={(e) => setValue(e.currentTarget.value)}\r\n        />\r\n        <button>입력!</button>\r\n      </form>\r\n      <div>{result}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default  WordRelay;\r\n","import React, { useState, useRef } from 'react';\r\nimport './css/response.css';\r\n\r\nconst ResponseCheckFunction = () => {\r\n    const [state, setState] = useState('waiting');\r\n    const [message, setMessage] = useState('클릭해서 시작하세요.');\r\n    const [result, setResult] = useState([]);\r\n    const timeout = useRef(null);\r\n    const startTime = useRef(0);\r\n    const endTime = useRef(0);\r\n\r\n    \r\n    const onClickScreen = () => {\r\n        if (state === 'waiting') {\r\n            timeout.current = setTimeout(() => {\r\n                setState('now');\r\n                setMessage('지금 클릭');\r\n                startTime.current = new Date();\r\n            }, Math.floor(Math.random() * 1000) + 2000); // 2초~3초 랜덤\r\n            setState('ready');\r\n            setMessage('초록색이 되면 클릭하세요.');\r\n        } else if (state === 'ready') { // 성급하게 클릭\r\n            clearTimeout(timeout.current);\r\n            setState('waiting');\r\n            setMessage('너무 성급하시군요! 초록색이 된 후에 클릭하세요');\r\n        } else if (state === 'now') { // 반응속도 체크\r\n            endTime.current = new Date();\r\n            setState('waiting');\r\n            setMessage('클릭해서 시작하세요.');\r\n            setResult((prevResult) => {\r\n                return [...prevResult, endTime.current - startTime.current ];\r\n            });\r\n            \r\n        }\r\n    };\r\n    const onReset = () => {\r\n        setResult([]);\r\n    };\r\n\r\n    const renderAverage = () => {\r\n        return result.length === 0 \r\n            ? null\r\n            : <>\r\n            <div>평균 시간: {result.reduce((a, c) => a + c) / result.length}ms</div>\r\n            <button onClick={onReset}>리셋</button>\r\n            </>\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div \r\n                id=\"screen\" \r\n                className={state} \r\n                onClick={onClickScreen}\r\n            >\r\n                {message}\r\n            </div>\r\n            {renderAverage()}\r\n        </>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default ResponseCheckFunction;","import React, { Component } from 'react'\nimport NumberBaseball from './Playlist/NumberBaseballFunction';\nimport RSP from './Playlist/RSPFunction';\nimport Lotto from './Playlist/LottoFunction';\nimport Gugudan from './Playlist/GuGuDan';\nimport Minesweeper from './Playlist/MineSearch';\nimport Ending from './Playlist/WordRelayFunction';\nimport Response from './Playlist/ResponseCheckFunction';\n\nclass GameMatcher extends Component {\n    render() {\n        let urlSearchParmas = new URLSearchParams(this.props.location.search.slice(1));//라우트에서 받아오는 것이다. this.props안에 history객체가 있는데 this.props안에 있는 history객체는 내부적으로 브라우저에 있는 history객체를 사용하고 있다.\n        console.log(urlSearchParmas.get('hello'));\n        if (this.props.match.params.name === 'number-baseball') {\n            return <NumberBaseball />\n        } else if (this.props.match.params.name === 'rock-scissors-paper') {\n            return <RSP />\n        } else if (this.props.match.params.name === 'lotto-generator') {\n            return <Lotto />\n        } else if (this.props.match.params.name === 'gugudan') {\n            return <Gugudan />\n        } else if (this.props.match.params.name === 'Ending') {\n            return <Ending />\n        } else if (this.props.match.params.name === 'Minesweeper') {\n            return <Minesweeper />\n        } else if (this.props.match.params.name === 'Response') {\n            return <Response />\n        }\n        \n        return (\n            <div>\n                일치하는 게임이 없습니다.\n            </div>\n        );\n    }\n}\n\nexport default GameMatcher;","import React from 'react';\nimport { HashRouter, Route, Link } from 'react-router-dom';\n\nimport GameMatcher from './GameMatcher';\n\nconst Games = () => {\n  return (\n      <HashRouter>\n        <div>\n          <Link to=\"/game/number-baseball\">숫자야구</Link>\n          &nbsp;\n          <Link to=\"/game/rock-scissors-paper\">가위바위보</Link>\n          &nbsp;\n          <Link to=\"/game/lotto-generator\">로또생성기</Link>\n          &nbsp;\n          <Link to=\"/game/gugudan\">구구단</Link>\n          &nbsp;\n          <Link to=\"/game/Ending\">끝말잇기</Link>\n          &nbsp;\n          <Link to=\"/game/Minesweeper\">지뢰찾기</Link>\n          &nbsp;\n          <Link to=\"/game/Response\">반응속도</Link>\n          &nbsp;\n          <Link to=\"/game/index\">게임 매쳐</Link>{/* /game/index두개단어이기만 하면 된다. /game/뒤에는 아무 단어나 넣으면 된다. */}\n        </div>\n        <div>\n          <Route path=\"/game/:name\" component={GameMatcher} /> {/* 라우트들이 너무 늘어나면 문제가 되기 때문에 효율적으로 라우트 갯수를 관리할 수 있는 동적 라우트 매칭 */}\n          {/* 주소를 /game/:name 이런식으로 적는데 실제의 주소가 /game/:name 이건 아니고 /game/뒤에 :name이 있는데 얘네들을 파라미터라고 부른다. 줄여서 params라고 부른다. 이부분이 동적으로 바뀐다. :name이 될 수도 있고 :rock-scissors-paper가 될수 도 있고 :lotto-generator가 될수 도 있는 것이다.  */}\n        </div>\n      </HashRouter>\n  );\n};\n\nexport default Games;\n","import React, { Component } from 'react';\nimport Games from './Games';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Games />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}