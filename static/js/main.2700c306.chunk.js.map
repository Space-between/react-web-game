{"version":3,"sources":["Playlist/GuGuDan.jsx","Playlist/WordRelayClass.jsx","Playlist/TryFunction.jsx","Playlist/NumberBaseballFunction.jsx","Playlist/RSPClass.jsx","Playlist/Ball.jsx","Playlist/Lotto.jsx","Playlist/Td.jsx","Playlist/Tr.jsx","Playlist/Table.jsx","Playlist/Form.jsx","Playlist/MineSearch.jsx","GameMatcher.jsx","Games.jsx","App.js","serviceWorker.js","index.js"],"names":["React","require","useState","useRef","module","exports","Math","ceil","random","first","setFirst","second","setSecond","value","setValue","result","setResult","inputEl","onSubmit","e","preventDefault","parseInt","current","focus","ref","type","onChange","target","id","WordRelay","Component","state","word","onSubmitForm","length","setState","input","onChangeInput","onRefInput","c","this","TryFunction","memo","tryInfo","try","getNumbers","candidates","array","i","chosen","splice","floor","push","NumberBaseballFunction","answer","setAnswer","tries","setTries","join","t","alert","answerArray","split","map","v","strike","ball","console","log","includes","indexOf","maxLength","key","rspCoords","바위","가위","보","scores","computerChoice","imgCoord","Object","entries","find","RSP","score","changeHand","onClickBtn","choice","clearInterval","interval","diff","prevState","setTimeout","setInterval","className","onClick","style","background","Ball","number","getWinNumbers","candidate","Array","fill","shuffle","bonusNumber","winNumbers","slice","sort","p","Lotto","winBalls","bonus","redo","timeouts","runTimeouts","onClickRedo","prevProps","forEach","clearTimeout","getTdStyle","code","CODE","NORMAL","MINE","CLICKED_MINE","OPENED","QUESTION_MINE","QUESTION","FLAG_MINE","FLAG","Td","rowIndex","cellIndex","useContext","TableContext","tableData","dispatch","halted","onClickTd","useCallback","OPEN_CELL","row","cell","CLICK_MINE","onRightClickTd","FLAG_CELL","QUESTION_CELL","NORMALIZE_CELL","RealTd","data","onContextMenu","getTdText","Tr","td","Table","tr","Form","setRow","setCell","mine","setMine","onChangeRow","onChangeCell","onChangeMine","START_GAME","placeholder","createContext","initialState","timer","openedCount","plantMine","arr","rowData","j","k","ver","hor","reducer","action","checked","checkAround","around","concat","count","filter","near","n","MineSearch","useReducer","useMemo","useEffect","Provider","GameMatcher","urlSearchParmas","URLSearchParams","props","location","search","get","match","params","name","Games","to","path","component","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2700c306.chunk.js","sourcesContent":["const React = require('react');\nconst { useState, useRef } = React;\n\nconst GuGuDan = () => {\n  const [first, setFirst] = useState(Math.ceil(Math.random() * 9));\n  const [second, setSecond] = useState(Math.ceil(Math.random() * 9));\n  const [value, setValue] = useState('');\n  const [result, setResult] = useState('');\n  const inputEl = useRef(null);\n\n  const onSubmitForm = (e) => {\n    e.preventDefault();\n    if (parseInt(value) === first * second) {\n      setResult('정답');\n      setFirst(Math.ceil(Math.random() * 9));\n      setSecond(Math.ceil(Math.random() * 9));\n      setValue('');\n      inputEl.current.focus();\n    } else {\n      setResult('땡');\n      setValue('');\n      inputEl.current.focus();\n    }\n  };\n  return (\n    <>\n      <div>{first} 곱하기 {second}는?</div>\n      <form onSubmit={onSubmitForm}>\n        <input\n          ref={inputEl}\n          type=\"number\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <button>입력!</button>\n      </form>\n      <div id=\"result\">{result}</div>\n    </>\n  );\n};\n\nmodule.exports = GuGuDan;\n","const React = require('react');\nconst { Component } = React;\n\n\nclass WordRelay extends React.Component {\n    state = {\n        word: '개발자',\n        value: '',\n        result: '',\n    };\n\n    onSubmitForm = (e) => {\n        e.preventDefault();\n        if (this.state.word[this.state.word.length - 1] === this.state.value[0]) {\n            this.setState({\n                result: '딩동댕',\n                word: this.state.value,\n                value:'',\n            });\n            this.input.focus();\n        } else {\n            this.setState({\n                result: '떙',\n                value:'',\n            });\n            this.input.focus();   \n        }\n    };\n\n    onChangeInput = (e) => {\n        this.setState({ value:e.target.value });\n    };\n\n    input;\n\n    onRefInput = (c) => {\n        this.input = c;\n    };\n\n    \n    render() {\n        return (\n        <>\n            <div>{this.state.word}</div>\n            <form onSubmit={this.onSubmitForm}>\n                <input ref={this.onRefInput} value={this.state.value} onChange={this.onChangeInput} />\n                <button>입력!</button>\n            </form>\n        <div>{this.state.result}</div>\n        </>\n        );\n    }\n}\n\nmodule.exports = WordRelay;","import React, { memo } from 'react';\n\nconst TryFunction = memo(({ tryInfo }) => {\n    return (\n        <li>\n            <div>{tryInfo.try}</div>\n            <div>{tryInfo.result}</div>\n        </li>\n    )\n});\n\n\n\nexport default TryFunction;","import React, {useRef, useState, memo} from 'react';\n\nimport TryFunction from './TryFunction';\n\nconst getNumbers = () => {\n    const candidates = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const array = [];\n    for (let i = 0; i < 4; i += 1) {\n      const chosen = candidates.splice(Math.floor(Math.random() * (9 - i)), 1)[0];\n      array.push(chosen);\n    }\n    return array;\n  };\n  \n  const NumberBaseballFunction = () => {\n    const [answer, setAnswer] = useState(getNumbers());\n    const [value, setValue] = useState('');\n    const [result, setResult] = useState('');\n    const [tries, setTries] = useState([]);\n    const inputEl = useRef(null);\n  \n    const onSubmitForm = (e) => {\n      e.preventDefault();\n      if (value === answer.join('')) {\n        setTries((t) => ([\n          ...t,\n          {\n            try: value,\n            result: '홈런!',\n          }\n        ]));\n        setResult('홈런!');\n        alert('게임을 다시 실행합니다.');\n        setValue('');\n        setAnswer(getNumbers());\n        setTries([]);\n        inputEl.current.focus();\n      } else {\n        const answerArray = value.split('').map((v) => parseInt(v));\n        let strike = 0;\n        let ball = 0;\n        if (tries.length >= 9) {\n          setResult(`10번 넘게 틀려서 실패! 답은 ${answer.join(',')}였습니다!`); // state set은 비동기\n          alert('게임을 다시 시작합니다.');\n          setValue('');\n          setAnswer(getNumbers());\n          setTries([]);\n          inputEl.current.focus();\n        } else {\n          console.log('답은', answer.join(''));\n          for (let i = 0; i < 4; i += 1) {\n            if (answerArray[i] === answer[i]) {\n              console.log('strike', answerArray[i], answer[i]);\n              strike += 1;\n            } else if (answer.includes(answerArray[i])) {\n              console.log('ball', answerArray[i], answer.indexOf(answerArray[i]));\n              ball += 1;\n            }\n          }\n          setTries(t => ([\n            ...t,\n            {\n              try: value,\n              result: `${strike} 스트라이크, ${ball} 볼입니다.`,\n            }\n          ]));\n          setValue('');\n          inputEl.current.focus();\n        }\n      }\n    };\n  \n    return (\n      <>\n        <h1>{result}</h1>\n        <form onSubmit={onSubmitForm}>\n          <input\n            ref={inputEl}\n            maxLength={4}\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <button>입력!</button>\n        </form>\n        <div>시도: {tries.length}</div>\n        <ul>\n          {tries.map((v, i) => (\n            <TryFunction key={`${i + 1}차 시도 : ${v.try}`} tryInfo={v}/>\n          ))}\n        </ul>\n      </>\n    );\n  };\n\n\n\nexport default NumberBaseballFunction;","import React, { Component } from 'react'\n\n\n// (밑에 주석친 내용은 리액트 라이프사이클순서이다.)\n// 클래스의 경우 -> constructor -> render -> ref -> componentDidMount\n// -> (setState/props 바뀔때) -> shouldComponentUpdate(true) -> render -> componentDidUpdate\n// 부모가 나를 없앴을 떄 -> componentWillUnmount -> 소멸\n\nconst rspCoords = {\n    바위: '0',\n    가위: '-142px',\n    보: '-284px',\n};\n\nconst scores = {\n    가위: 1,\n    바위: 0,\n    보: -1,\n};\n\nconst computerChoice = (imgCoord) => {\n    return Object.entries(rspCoords).find(function(v) {\n        return v[1] === imgCoord;\n    })[0];\n};\n\nclass RSP extends Component {\n    state = {\n        result: '',\n        imgCoord: rspCoords.바위,\n        score: 0,\n    };\n\n    interval;\n\n    componentDidMount() { // 컴포넌트가 첫 렌더링된 후, 여기에 비동기 요청을 많이 해요\n        \n        this.interval = setInterval( this.changeHand, 100);\n    }\n\n\n    componentWillUnmount() { // 컴포넌트가 제거되기 직전, 비동기 요청 정리를 많이 해요 (이코드에서는 componentWillUnmount를 넣으나 안넣으나 체감하기 힘듬)\n        clearInterval(this.interval);\n    }\n\n    changeHand = () => {\n        const {imgCoord} = this.state;\n        if (imgCoord === rspCoords.바위) {\n            this.setState({\n                imgCoord: rspCoords.가위,\n            });\n        } else if(imgCoord === rspCoords.가위) {\n            this.setState({\n                imgCoord: rspCoords.보,\n            });\n        } else if(imgCoord === rspCoords.보) {\n            this.setState({\n                imgCoord: rspCoords.바위,\n            });\n        }\n    };\n\n    onClickBtn = (choice) => {\n        const {imgCoord} = this.state;\n        clearInterval(this.interval);\n        const myScore = scores[choice];\n        const cpuScore = scores[computerChoice(imgCoord)];\n        const diff = myScore - cpuScore;\n        if (diff === 0) {\n            this.setState({\n                result: '비겼습니다!',\n            });\n        } else if ([-1, 2].includes(diff)) {\n            this.setState((prevState) => {\n                return {\n                    result: '이겼습니다.!',\n                    score: prevState.score + 1,\n                };\n            });\n        } else {\n            this.setState((prevState) => {\n                return {\n                    result: '졌습니다!',\n                    score: prevState.score - 1,\n                };\n            });\n        }\n        setTimeout(() => {\n            this.interval = setInterval(this.changeHand, 100);\n        },1000);\n    };\n\n    render() {\n        const { result, score, imgCoord } = this.state;\n        return (\n            <>\n                <div>\n                    <button id=\"rock\" className=\"btn\" onClick={() => this.onClickBtn('바위')}>바위</button>\n                    <button id=\"scissor\" className=\"btn\" onClick={() => this.onClickBtn('가위')}>가위</button>\n                    <button id=\"paper\" className=\"btn\" onClick={() => this.onClickBtn('보')}>보</button>\n                </div>\n                <div>{result}</div>\n                <div>현재 {score}점</div>\n                <div id=\"computer\" style={{ background: `url(https://en.pimg.jp/023/182/267/1/23182267.jpg) ${imgCoord} 0` }} />\n            </>\n        )\n    }\n}\n\nexport default RSP;","import React, { memo } from 'react'\n\nconst Ball = memo(({ number }) => {\n    let background;\n    if (number <= 10) {\n        background = 'red';\n    } else if (number <= 20) {\n        background = 'orange';\n    } else if (number <= 30) {\n        background = 'yellow';\n    } else if (number <= 40) {\n        background = 'blue';\n    } else {\n        background = 'green';\n    }\n    return (\n    <div className=\"ball\" style={{ background }}>{number}</div>\n    );\n});\n\nexport default Ball;","import React, { Component } from 'react';\nimport Ball from './Ball';\n\nfunction getWinNumbers() {\n    console.log('getWinNumbers');\n    const candidate = Array(45).fill().map((v, i) => i + 1);\n    const shuffle = [];\n    while (candidate.length > 0) {\n      shuffle.push(candidate.splice(Math.floor(Math.random() * candidate.length), 1)[0]);\n    }\n    const bonusNumber = shuffle[shuffle.length - 1];\n    const winNumbers = shuffle.slice(0, 6).sort((p, c) => p - c);\n    return [...winNumbers, bonusNumber];\n  }\n  \n  class Lotto extends Component {\n    state = {\n      winNumbers: getWinNumbers(), // 당첨 숫자들\n      winBalls: [],\n      bonus: null, // 보너스 공\n      redo: false,\n    };\n  \n    timeouts = [];\n  \n    runTimeouts = () => {\n      console.log('runTimeouts');\n      const { winNumbers } = this.state;\n      for (let i = 0; i < winNumbers.length - 1; i++) {\n        this.timeouts[i] = setTimeout(() => {\n          this.setState((prevState) => {\n            return {\n              winBalls: [...prevState.winBalls, winNumbers[i]],\n            };\n          });\n        }, (i + 1) * 1000);\n      }\n      this.timeouts[6] = setTimeout(() => {\n        this.setState({\n          bonus: winNumbers[6],\n          redo: true,\n        });\n      }, 7000);\n    };\n  \n    componentDidMount() {\n      console.log('didMount');\n      this.runTimeouts();\n      console.log('로또 숫자를 생성합니다.');\n    }\n  \n    componentDidUpdate(prevProps, prevState) {\n      console.log('didUpdate');\n      if (this.state.winBalls.length === 0) {\n        this.runTimeouts();\n      }\n      if (prevState.winNumbers !== this.state.winNumbers) {\n        console.log('로또 숫자를 생성합니다.');\n      }\n    }\n  \n    componentWillUnmount() {\n      this.timeouts.forEach((v) => {\n        clearTimeout(v);\n      });\n    }\n  \n    onClickRedo = () => {\n      console.log('onClickRedo');\n      this.setState({\n        winNumbers: getWinNumbers(), // 당첨 숫자들\n        winBalls: [],\n        bonus: null, // 보너스 공\n        redo: false,\n      });\n      this.timeouts = [];\n    };\n  \n    render() {\n      const { winBalls, bonus, redo } = this.state;\n      return (\n        <>\n          <div>당첨 숫자</div>\n          <div id=\"결과창\">\n            {winBalls.map((v) => <Ball key={v} number={v} />)}\n          </div>\n          <div>보너스!</div>\n          {bonus && <Ball number={bonus} />}\n          {redo && <button onClick={this.onClickRedo}>한 번 더!</button>}\n        </>\n      );\n    }\n  }\n  \nexport default Lotto;","import React, { useContext, useCallback, memo, useMemo } from 'react';\nimport { CLICK_MINE, CODE, FLAG_CELL, NORMALIZE_CELL, OPEN_CELL, QUESTION_CELL, TableContext } from './MineSearch';\n\nconst getTdStyle = (code) => {\n  switch (code) {\n    case CODE.NORMAL:\n    case CODE.MINE:\n      return {\n        background: '#444',\n      };\n    case CODE.CLICKED_MINE:\n    case CODE.OPENED:\n      return {\n        background: 'white',\n      };\n    case CODE.QUESTION_MINE:\n    case CODE.QUESTION:\n      return {\n        background: 'yellow',\n      };\n    case CODE.FLAG_MINE:\n    case CODE.FLAG:\n      return {\n        background: 'red',\n      };\n    default:\n      return {\n        background: 'white',\n      };\n  }\n};\n\nconst getTdText = (code) => {\n  console.log('getTdtext');\n  switch (code) {\n    case CODE.NORMAL:\n      return '';\n    case CODE.MINE:\n      return 'X';\n    case CODE.CLICKED_MINE:\n      return '펑';\n    case CODE.FLAG_MINE:\n    case CODE.FLAG:\n      return '!';\n    case CODE.QUESTION_MINE:\n    case CODE.QUESTION:\n      return '?';\n    default:\n      return code || '';\n  }\n};\n\nconst Td = memo(({ rowIndex, cellIndex }) => {\n  const { tableData, dispatch, halted } = useContext(TableContext);\n\n  const onClickTd = useCallback(() => {\n    if (halted) {\n      return;\n    }\n    switch (tableData[rowIndex][cellIndex]) {\n      case CODE.OPENED:\n      case CODE.FLAG_MINE:\n      case CODE.FLAG:\n      case CODE.QUESTION_MINE:\n      case CODE.QUESTION:\n        return;\n      case CODE.NORMAL:\n        dispatch({ type: OPEN_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      case CODE.MINE:\n        dispatch({ type: CLICK_MINE, row: rowIndex, cell: cellIndex });\n        return;\n      default:\n        return;\n    }\n  }, [tableData[rowIndex][cellIndex], halted]);\n\n  const onRightClickTd = useCallback((e) => {\n    e.preventDefault();\n    if (halted) {\n      return;\n    }\n    switch (tableData[rowIndex][cellIndex]) {\n      case CODE.NORMAL:\n      case CODE.MINE:\n        dispatch({ type: FLAG_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      case CODE.FLAG_MINE:\n      case CODE.FLAG:\n        dispatch({ type: QUESTION_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      case CODE.QUESTION_MINE:\n      case CODE.QUESTION:\n        dispatch({ type: NORMALIZE_CELL, row: rowIndex, cell: cellIndex });\n        return;\n      default:\n        return;\n    }\n  }, [tableData[rowIndex][cellIndex], halted]);\n\n  console.log('td rendered');\n\n  return <RealTd onClickTd={onClickTd} onRightClickTd={onRightClickTd} data={tableData[rowIndex][cellIndex]} />;\n});\n\nconst RealTd = memo(({ onClickTd, onRightClickTd, data}) => {\n  console.log('real td rendered');\n  return (\n    <td\n      style={getTdStyle(data)}\n      onClick={onClickTd}\n      onContextMenu={onRightClickTd}\n    >{getTdText(data)}</td>\n  )\n});\n\nexport default Td;\n","import React, { useContext, memo } from 'react';\nimport Td from './Td';\nimport { TableContext } from './MineSearch';\n\nconst Tr = memo(({ rowIndex }) => {\n  const { tableData } = useContext(TableContext);\n\n  return (\n    <tr>\n      {tableData[0] && Array(tableData[0].length).fill().map((td, i) =>\n        <Td rowIndex={rowIndex} cellIndex={i} />\n      )}\n    </tr>\n  )\n});\n\nexport default Tr;\n","import React, { useContext, memo } from 'react';\nimport Tr from './Tr';\nimport { TableContext } from './MineSearch';\n\nconst Table = memo(() => {\n  const { tableData } = useContext(TableContext);\n  return (\n    <table>\n      {Array(tableData.length).fill().map((tr, i) => <Tr rowIndex={i} />)}\n    </table>\n  )\n});\n\nexport default Table;\n","import React, { useState, useCallback, useContext, memo } from 'react';\nimport { START_GAME, TableContext } from './MineSearch';\n\nconst Form = memo(() => {\n  const [row, setRow] = useState(10);\n  const [cell, setCell] = useState(10);\n  const [mine, setMine] = useState(20);\n  const { dispatch } = useContext(TableContext);\n\n  const onChangeRow = useCallback((e) => {\n    setRow(e.target.value);\n  }, []);\n\n  const onChangeCell = useCallback((e) => {\n    setCell(e.target.value);\n  }, []);\n\n  const onChangeMine = useCallback((e) => {\n    setMine(e.target.value);\n  }, []);\n\n  const onClickBtn = useCallback(() => {\n    dispatch({ type: START_GAME, row, cell, mine });\n  }, [row, cell, mine]);\n\n  return (\n    <div>\n      <input type=\"number\" placeholder=\"세로\" value={row} onChange={onChangeRow} />\n      <input type=\"number\" placeholder=\"가로\" value={cell} onChange={onChangeCell} />\n      <input type=\"number\" placeholder=\"지뢰\" value={mine} onChange={onChangeMine} />\n      <button onClick={onClickBtn}>시작</button>\n    </div>\n  );\n});\n\nexport default Form;\n","import React, { useEffect, useReducer, createContext, useMemo } from 'react';\nimport Table from './Table';\nimport Form from './Form';\n\nexport const CODE = {\n  MINE: -7,\n  NORMAL: -1,\n  QUESTION: -2,\n  FLAG: -3,\n  QUESTION_MINE: -4,\n  FLAG_MINE: -5,\n  CLICKED_MINE: -6,\n  OPENED: 0, // 0 이상이면 다 opened\n};\n\nexport const TableContext = createContext({\n  tableData: [],\n  halted: true,\n  dispatch: () => {},\n});\n\nconst initialState = {\n  tableData: [],\n  data: {\n    row: 0,\n    cell: 0,\n    mine: 0,\n  },\n  timer: 0,\n  result: '',\n  halted: true,\n  openedCount: 0,\n};\n\nconst plantMine = (row, cell, mine) => {\n  console.log(row, cell, mine);\n  const candidate = Array(row * cell).fill().map((arr, i) => {\n    return i;\n  });\n  const shuffle = [];\n  while (candidate.length > row * cell - mine) {\n    const chosen = candidate.splice(Math.floor(Math.random() * candidate.length), 1)[0];\n    shuffle.push(chosen);\n  }\n  const data = [];\n  for (let i = 0; i < row; i++) {\n    const rowData = [];\n    data.push(rowData);\n    for (let j = 0; j < cell; j++) {\n      rowData.push(CODE.NORMAL);\n    }\n  }\n\n  for (let k = 0; k < shuffle.length; k++) {\n    const ver = Math.floor(shuffle[k] / cell);\n    const hor = shuffle[k] % cell;\n    data[ver][hor] = CODE.MINE;\n  }\n\n  console.log(data);\n  return data;\n};\n\nexport const START_GAME = 'START_GAME';\nexport const OPEN_CELL = 'OPEN_CELL';\nexport const CLICK_MINE = 'CLICK_MINE';\nexport const FLAG_CELL = 'FLAG_CELL';\nexport const QUESTION_CELL = 'QUESTION_CELL';\nexport const NORMALIZE_CELL = 'NORMALIZE_CELL';\nexport const INCREMENT_TIMER = 'INCREMENT_TIMER';\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_GAME:\n      return {\n        ...state,\n        data: {\n          row: action.row,\n          cell: action.cell,\n          mine: action.mine,\n        },\n        openedCount: 0,\n        tableData: plantMine(action.row, action.cell, action.mine),\n        halted: false,\n        timer: 0,\n      };\n    case OPEN_CELL: {\n      const tableData = [...state.tableData];\n      tableData.forEach((row, i) => {\n        tableData[i] = [...row];\n      });\n      const checked = [];\n      let openedCount = 0;\n      console.log(tableData.length, tableData[0].length);\n      const checkAround = (row, cell) => {\n        console.log(row, cell);\n        if (row < 0 || row >= tableData.length || cell < 0 || cell >= tableData[0].length) {\n          return;\n        } // 상하좌우 없는칸은 안 열기\n        if ([CODE.OPENED, CODE.FLAG, CODE.FLAG_MINE, CODE.QUESTION_MINE, CODE.QUESTION].includes(tableData[row][cell])) {\n          return;\n        } // 닫힌 칸만 열기\n        if (checked.includes(row + '/' + cell)) {\n          return;\n        } else {\n          checked.push(row + '/' + cell);\n        } // 한 번 연칸은 무시하기\n        let around = [\n          tableData[row][cell - 1], tableData[row][cell + 1],\n        ];\n        if (tableData[row - 1]) {\n          around = around.concat([tableData[row - 1][cell - 1], tableData[row - 1][cell], tableData[row - 1][cell + 1]]);\n        }\n        if (tableData[row + 1]) {\n          around = around.concat([tableData[row + 1][cell - 1], tableData[row + 1][cell], tableData[row + 1][cell + 1]]);\n        }\n        const count = around.filter(function (v) {\n          return [CODE.MINE, CODE.FLAG_MINE, CODE.QUESTION_MINE].includes(v);\n        }).length;\n        if (count === 0) { // 주변칸 오픈\n          if (row > -1) {\n            const near = [];\n            if (row - 1 > -1) {\n              near.push([row -1, cell - 1]);\n              near.push([row -1, cell]);\n              near.push([row -1, cell + 1]);\n            }\n            near.push([row, cell - 1]);\n            near.push([row, cell + 1]);\n            if (row + 1 < tableData.length) {\n              near.push([row + 1, cell - 1]);\n              near.push([row + 1, cell]);\n              near.push([row + 1, cell + 1]);\n            }\n            near.forEach((n) => {\n              if (tableData[n[0]][n[1]] !== CODE.OPENED) {\n                checkAround(n[0], n[1]);\n              }\n            })\n          }\n        }\n        if (tableData[row][cell] === CODE.NORMAL) { // 내 칸이 닫힌 칸이면 카운트 증가\n          openedCount += 1;\n        }\n        tableData[row][cell] = count;\n      };\n      checkAround(action.row, action.cell);\n      let halted = false;\n      let result = '';\n      console.log(state.data.row * state.data.cell - state.data.mine, state.openedCount, openedCount);\n      if (state.data.row * state.data.cell - state.data.mine === state.openedCount + openedCount) { // 승리\n        halted = true;\n        result = `${state.timer}초만에 승리하셨습니다`;\n      }\n      return {\n        ...state,\n        tableData,\n        openedCount: state.openedCount + openedCount,\n        halted,\n        result,\n      };\n    }\n    case CLICK_MINE: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      tableData[action.row][action.cell] = CODE.CLICKED_MINE;\n      return {\n        ...state,\n        tableData,\n        halted: true,\n      };\n    }\n    case FLAG_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.MINE) {\n        tableData[action.row][action.cell] = CODE.FLAG_MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.FLAG;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case QUESTION_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.FLAG_MINE) {\n        tableData[action.row][action.cell] = CODE.QUESTION_MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.QUESTION;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case NORMALIZE_CELL: {\n      const tableData = [...state.tableData];\n      tableData[action.row] = [...state.tableData[action.row]];\n      if (tableData[action.row][action.cell] === CODE.QUESTION_MINE) {\n        tableData[action.row][action.cell] = CODE.MINE;\n      } else {\n        tableData[action.row][action.cell] = CODE.NORMAL;\n      }\n      return {\n        ...state,\n        tableData,\n      };\n    }\n    case INCREMENT_TIMER: {\n      return {\n        ...state,\n        timer: state.timer + 1,\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst MineSearch = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { tableData, halted, timer, result } = state;\n\n  const value = useMemo(() => ({ tableData, halted, dispatch }), [tableData, halted]);\n\n  useEffect(() => {\n    let timer;\n    if (halted === false) {\n      timer = setInterval(() => {\n        dispatch({ type: INCREMENT_TIMER });\n      }, 1000);\n    }\n    return () => {\n      clearInterval(timer);\n    }\n  }, [halted]);\n\n  return (\n    <TableContext.Provider value={value}>\n      <Form />\n      <div>{timer}</div>\n      <Table />\n      <div>{result}</div>\n    </TableContext.Provider>\n  );\n};\n\nexport default MineSearch;\n","import React, { Component } from 'react'\nimport NumberBaseball from './Playlist/NumberBaseballFunction';\nimport RSP from './Playlist/RSPClass';\nimport Lotto from './Playlist/Lotto';\nimport * as Gugudan from './Playlist/GuGuDan';\nimport Minesweeper from './Playlist/MineSearch';\nimport * as Ending from './Playlist/WordRelayClass';\n\nexport default class GameMatcher extends Component {\n    render() {\n        let urlSearchParmas = new URLSearchParams(this.props.location.search.slice(1));//라우트에서 받아오는 것이다. this.props안에 history객체가 있는데 this.props안에 있는 history객체는 내부적으로 브라우저에 있는 history객체를 사용하고 있다.\n        console.log(urlSearchParmas.get('hello'));\n        if (this.props.match.params.name === 'number-baseball') {\n            return <NumberBaseball />\n        } else if (this.props.match.params.name === 'rock-scissors-paper') {\n            return <RSP />\n        } else if (this.props.match.params.name === 'lotto-generator') {\n            return <Lotto />\n        } else if (this.props.match.params.name === 'gugudan') {\n            return <Gugudan />\n        } else if (this.props.match.params.name === 'Ending') {\n            return <Ending />\n        } else if (this.props.match.params.name === 'Minesweeper') {\n            return <Minesweeper />\n        } \n        return (\n            <div>\n                일치하는 게임이 없습니다.\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { HashRouter, Route, Link } from 'react-router-dom';\n\nimport GameMatcher from './GameMatcher';\n\nconst Games = () => {\n  return (\n      <HashRouter>\n        <div>\n          <Link to=\"/game/number-baseball\">숫자야구</Link>\n          &nbsp;\n          <Link to=\"/game/rock-scissors-paper\">가위바위보</Link>\n          &nbsp;\n          <Link to=\"/game/lotto-generator\">로또생성기</Link>\n          &nbsp;\n          <Link to=\"/game/gugudan\">구구단</Link>\n          &nbsp;\n          <Link to=\"/game/Ending\">끝말잇기</Link>\n          &nbsp;\n          <Link to=\"/game/Minesweeper\">지뢰찾기</Link>\n          &nbsp;\n          <Link to=\"/game/index\">게임 매쳐</Link>{/* /game/index두개단어이기만 하면 된다. /game/뒤에는 아무 단어나 넣으면 된다. */}\n        </div>\n        <div>\n          <Route path=\"/game/:name\" component={GameMatcher} /> {/* 라우트들이 너무 늘어나면 문제가 되기 때문에 효율적으로 라우트 갯수를 관리할 수 있는 동적 라우트 매칭 */}\n          {/* 주소를 /game/:name 이런식으로 적는데 실제의 주소가 /game/:name 이건 아니고 /game/뒤에 :name이 있는데 얘네들을 파라미터라고 부른다. 줄여서 params라고 부른다. 이부분이 동적으로 바뀐다. :name이 될 수도 있고 :rock-scissors-paper가 될수 도 있고 :lotto-generator가 될수 도 있는 것이다.  */}\n        </div>\n      </HashRouter>\n  );\n};\n\nexport default Games;\n","import React, { Component } from 'react';\nimport Games from './Games';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Games />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}